version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev
    volumes:
      - ./app/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    command: sh -c "npm install && npm start"

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    volumes:
      - ./app/backend:/app/backend
      - ./frames:/app/frames
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/campy
    command: uvicorn backend.api.main:app --reload --host 0.0.0.0 --port 8000
    depends_on:
      - db

  rtsp:
    build:
      context: .
      dockerfile: docker/rtsp/Dockerfile
    volumes:
      - ./app/backend/services:/app/services
    environment:
      - ENVIRONMENT=development
      - GST_DEBUG=3
    depends_on:
      - backend

  motion:
    build:
      context: .
      dockerfile: docker/motion/Dockerfile
    volumes:
      - ./app/backend/services:/app/services
    environment:
      - ENVIRONMENT=development
      - OPENCV_LOG_LEVEL=DEBUG
    depends_on:
      - rtsp

  recording:
    build:
      context: .
      dockerfile: docker/recording/Dockerfile
    volumes:
      - ./app/backend/services:/app/services
      - ./recordings:/app/recordings
    environment:
      - ENVIRONMENT=development
    depends_on:
      - motion

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=campy
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data: 